[gd_scene load_steps=14 format=3 uid="uid://tnwr4jxbg30e"]

[ext_resource type="PackedScene" uid="uid://x4qlh77as3ch" path="res://src/scenes/City/City.glb" id="1_uffto"]
[ext_resource type="Texture2D" uid="uid://v2auur816550" path="res://addons/kenney_prototype_textures/dark/texture_02.png" id="2_i6va2"]

[sub_resource type="Environment" id="Environment_h8lmt"]
ambient_light_source = 2
ambient_light_color = Color(1, 1, 1, 1)
ambient_light_energy = 5.0
tonemap_mode = 3
ssao_enabled = true
glow_enabled = true
glow_intensity = 1.54

[sub_resource type="Shader" id="Shader_htylw"]
code = "shader_type spatial;
render_mode unshaded, cull_front, depth_draw_always;

uniform float thickness = 0.1;
uniform vec4 outline_color: source_color = vec4(1.0);
uniform float distance_fade_min;
uniform float distance_fade_max;

void vertex() {
	vec3 normal = (COLOR.xyz - vec3(0.5)) * 2.0;
	VERTEX += (normal * thickness);
}

void fragment() {
	ALBEDO = outline_color.rgb;
	
	ALPHA *= clamp(smoothstep(distance_fade_max, distance_fade_min, length(VERTEX)), 0.0, 1.0);
	//if (outline_color.a < 1.0) {
	//	ALPHA = outline_color.a;
	//}
}

"

[sub_resource type="ShaderMaterial" id="ShaderMaterial_u8ee1"]
render_priority = 0
shader = SubResource("Shader_htylw")
shader_parameter/thickness = 0.1
shader_parameter/outline_color = Color(1, 1, 1, 1)
shader_parameter/distance_fade_min = 0.0
shader_parameter/distance_fade_max = 10000.0

[sub_resource type="StandardMaterial3D" id="StandardMaterial3D_d1jl3"]
next_pass = SubResource("ShaderMaterial_u8ee1")
albedo_color = Color(0.984314, 0.101961, 1, 1)
uv2_world_triplanar = true
distance_fade_max_distance = 1391.78

[sub_resource type="Shader" id="Shader_lc7oe"]
code = "shader_type spatial;
render_mode unshaded, cull_front, depth_draw_always;

uniform float thickness = 0.1;
uniform vec4 outline_color: source_color = vec4(1.0);
uniform float distance_fade_min;
uniform float distance_fade_max;

void vertex() {
	vec3 normal = (COLOR.xyz - vec3(0.5)) * 2.0;
	VERTEX += (normal * thickness);
}

void fragment() {
	ALBEDO = outline_color.rgb;
	
	ALPHA *= clamp(smoothstep(distance_fade_max, distance_fade_min, length(VERTEX)), 0.0, 1.0);
	//if (outline_color.a < 1.0) {
	//	ALPHA = outline_color.a;
	//}
}

"

[sub_resource type="ShaderMaterial" id="ShaderMaterial_ven1r"]
render_priority = 0
shader = SubResource("Shader_lc7oe")
shader_parameter/thickness = 0.1
shader_parameter/outline_color = Color(1.2, 0, 1.2, 1)
shader_parameter/distance_fade_min = 0.0
shader_parameter/distance_fade_max = 10000.0

[sub_resource type="StandardMaterial3D" id="StandardMaterial3D_g0o13"]
next_pass = SubResource("ShaderMaterial_ven1r")
albedo_color = Color(0.0352941, 0.0352941, 0.0352941, 1)
uv2_world_triplanar = true
distance_fade_max_distance = 1391.78

[sub_resource type="Shader" id="Shader_qgx72"]
code = "shader_type spatial;
render_mode unshaded, cull_front, depth_draw_always;

uniform float thickness = 0.1;
uniform vec4 outline_color: source_color = vec4(1.0);
uniform float distance_fade_min;
uniform float distance_fade_max;

void vertex() {
	vec3 normal = (COLOR.xyz - vec3(0.5)) * 2.0;
	VERTEX += (normal * thickness);
}

void fragment() {
	ALBEDO = outline_color.rgb;
	
	ALPHA *= clamp(smoothstep(distance_fade_max, distance_fade_min, length(VERTEX)), 0.0, 1.0);
	//if (outline_color.a < 1.0) {
	//	ALPHA = outline_color.a;
	//}
}

"

[sub_resource type="ShaderMaterial" id="ShaderMaterial_srede"]
render_priority = 0
shader = SubResource("Shader_qgx72")
shader_parameter/thickness = 0.5
shader_parameter/outline_color = Color(1.2, 0, 0.268437, 1)
shader_parameter/distance_fade_min = 0.0
shader_parameter/distance_fade_max = 10000.0

[sub_resource type="StandardMaterial3D" id="StandardMaterial3D_tp3hs"]
next_pass = SubResource("ShaderMaterial_srede")
albedo_color = Color(0, 0, 0, 1)
uv2_world_triplanar = true
distance_fade_max_distance = 1391.78

[sub_resource type="StandardMaterial3D" id="StandardMaterial3D_s7s0m"]
albedo_color = Color(0.294118, 0.294118, 0.294118, 1)
albedo_texture = ExtResource("2_i6va2")
uv1_scale = Vector3(0.1, 0.1, 0.1)
uv1_triplanar = true

[node name="City" type="Node3D"]

[node name="WorldEnvironment" type="WorldEnvironment" parent="."]
environment = SubResource("Environment_h8lmt")

[node name="LightmapGI" type="LightmapGI" parent="."]

[node name="Terrain" parent="." instance=ExtResource("1_uffto")]

[node name="Sea" parent="Terrain" index="0"]
visible = false

[node name="Roads" parent="Terrain" index="1"]
surface_material_override/0 = SubResource("StandardMaterial3D_d1jl3")

[node name="Domain" parent="Terrain" index="3"]
surface_material_override/0 = SubResource("StandardMaterial3D_g0o13")

[node name="Domain_col" parent="Terrain/Domain" index="0"]
visible = false

[node name="Coastline" parent="Terrain" index="4"]
visible = false

[node name="Buildings" parent="Terrain" index="5"]
transform = Transform3D(1, 0, 0, 0, 2, 0, 0, 0, 1, 0, 0, 0)

[node name="Buildings_col" parent="Terrain/Buildings" index="0"]
visible = false

[node name="Blocks" parent="Terrain" index="6"]
surface_material_override/0 = SubResource("StandardMaterial3D_tp3hs")

[node name="Blocks_col" parent="Terrain/Blocks" index="0"]
visible = false

[node name="Spawnpoints" type="Node3D" parent="."]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 4540.11, 40.73, 2798.41)

[node name="1" type="Marker3D" parent="Spawnpoints"]
transform = Transform3D(1.19249e-08, 0, -1, 0, 1, 0, 1, 0, 1.19249e-08, 100, -20.8135, 0)

[node name="CSGCombiner3D" type="CSGCombiner3D" parent="Spawnpoints/1"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, -8.31348, 0)
use_collision = true

[node name="CSGCylinder3D" type="CSGCylinder3D" parent="Spawnpoints/1/CSGCombiner3D"]
radius = 10.0
sides = 12
material = SubResource("StandardMaterial3D_s7s0m")

[node name="2" type="Marker3D" parent="Spawnpoints"]
transform = Transform3D(-1, 0, -8.74228e-08, 0, 1, 0, 8.74228e-08, 0, -1, 0, 0, 100)

[node name="CSGCombiner3D" type="CSGCombiner3D" parent="Spawnpoints/2"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, -8.31348, 0)
use_collision = true

[node name="CSGCylinder3D" type="CSGCylinder3D" parent="Spawnpoints/2/CSGCombiner3D"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 17.0046, -20.9027, 10.2663)
radius = 10.0
sides = 12
material = SubResource("StandardMaterial3D_s7s0m")

[node name="3" type="Marker3D" parent="Spawnpoints"]
transform = Transform3D(-4.37114e-08, 0, 1, 0, 1, 0, -1, 0, -4.37114e-08, -100, 0, 0)

[node name="CSGCombiner3D" type="CSGCombiner3D" parent="Spawnpoints/3"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, -8.31348, 0)
use_collision = true

[node name="CSGCylinder3D" type="CSGCylinder3D" parent="Spawnpoints/3/CSGCombiner3D"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 10.2663, -20.9027, -17.0046)
radius = 10.0
sides = 12
material = SubResource("StandardMaterial3D_s7s0m")

[node name="4" type="Marker3D" parent="Spawnpoints"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, -100)

[node name="CSGCombiner3D" type="CSGCombiner3D" parent="Spawnpoints/4"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, -8.31348, 0)
use_collision = true

[node name="CSGCylinder3D" type="CSGCylinder3D" parent="Spawnpoints/4/CSGCombiner3D"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, -17.0046, -20.9027, -10.2663)
radius = 10.0
sides = 12
material = SubResource("StandardMaterial3D_s7s0m")

[node name="DirectionalLight3D" type="DirectionalLight3D" parent="."]
transform = Transform3D(-4.37114e-08, 0, -1, 0, 1, 0, 1, 0, -4.37114e-08, 0, 1276.04, 2176)
visible = false
light_color = Color(0, 0.658824, 1, 1)
light_energy = 2.0
shadow_enabled = true
sky_mode = 1

[node name="DirectionalLight3D2" type="DirectionalLight3D" parent="."]
transform = Transform3D(-4.37114e-08, 0, 1, 0, 1, 0, -1, 0, -4.37114e-08, 0, 1276.04, 2176)
visible = false
light_color = Color(1, 0, 0.0901961, 1)
light_energy = 2.0
shadow_enabled = true
sky_mode = 1

[node name="OmniLight3D" type="OmniLight3D" parent="."]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 4616.17, 3111.67, 2581.45)
visible = false
light_energy = 16.0
omni_range = 5000.0
omni_attenuation = 0.074326

[editable path="Terrain"]
